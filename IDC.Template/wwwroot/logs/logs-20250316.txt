[2025-03-16 00:03:03] [Error] Type: System.TimeoutException
Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(SslClientAuthenticationOptions sslClientAuthenticationOptions)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:03:03.2500574Z", LastUpdateTimestamp: "2025-03-15T17:03:03.2500585Z" }] }.
StackTrace:
   --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 338

[2025-03-16 00:03:03] [Error] Type: System.TimeoutException
Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(SslClientAuthenticationOptions sslClientAuthenticationOptions)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:03:03.2500574Z", LastUpdateTimestamp: "2025-03-15T17:03:03.2500585Z" }] }.
StackTrace:
   --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 338
   --> IDC.Utilities.Data.MongoRepository.GetAllAsync(JObject filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Repository.cs:line 209
   --> IDC.Template.Controllers.DemoController.GetAllDocuments(Dictionary`2 filter, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Controllers/DemoController.Mongod.cs:line 89

[2025-03-16 00:05:07] [Error] Type: System.TimeoutException
Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:05:03.2487198Z", LastUpdateTimestamp: "2025-03-15T17:05:03.2487199Z" }] }.
StackTrace:
   --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 338

[2025-03-16 00:05:07] [Error] Type: System.TimeoutException
Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:05:03.2487198Z", LastUpdateTimestamp: "2025-03-15T17:05:03.2487199Z" }] }.
StackTrace:
   --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 338
   --> IDC.Utilities.Data.MongoRepository.GetAllAsync(JObject filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Repository.cs:line 209
   --> IDC.Template.Controllers.DemoController.GetAllDocuments(Dictionary`2 filter, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Controllers/DemoController.Mongod.cs:line 89

[2025-03-16 00:08:04] [Error] Type: System.OperationCanceledException
Message: The operation was canceled.
StackTrace:
   --> System.Threading.CancellationToken.ThrowOperationCanceledException()
   --> System.Threading.CancellationToken.ThrowIfCancellationRequested()
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 347

[2025-03-16 00:08:05] [Error] Type: System.OperationCanceledException
Message: The operation was canceled.
StackTrace:
   --> System.Threading.CancellationToken.ThrowOperationCanceledException()
   --> System.Threading.CancellationToken.ThrowIfCancellationRequested()
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 347
   --> IDC.Utilities.Data.MongoRepository.GetAllAsync(JObject filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Repository.cs:line 209
   --> IDC.Template.Controllers.DemoController.GetAllDocuments(Dictionary`2 filter, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Controllers/DemoController.Mongod.cs:line 89

[2025-03-16 00:14:32] [Error] Type: System.TimeoutException
Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:14:32.2683006Z", LastUpdateTimestamp: "2025-03-15T17:14:32.2683007Z" }] }.
StackTrace:
   --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 342

[2025-03-16 00:14:32] [Error] Type: System.TimeoutException
Message: Operation timed out after 3 attempts
StackTrace:
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 368
   --> IDC.Utilities.Data.MongoRepository.GetAllAsync(JObject filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Repository.cs:line 209
   --> IDC.Template.Controllers.DemoController.GetAllDocuments(Dictionary`2 filter, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Controllers/DemoController.Mongod.cs:line 89
Inner Exception:
  Type: System.TimeoutException
  Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:14:32.2683006Z", LastUpdateTimestamp: "2025-03-15T17:14:32.2683007Z" }] }.
  StackTrace:
     --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 342

[2025-03-16 00:17:43] [Error] Type: System.TimeoutException
Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:17:43.2842196Z", LastUpdateTimestamp: "2025-03-15T17:17:43.2842198Z" }] }.
StackTrace:
   --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 342

[2025-03-16 00:17:43] [Error] Type: System.TimeoutException
Message: Operation timed out after 3 attempts
StackTrace:
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 368
   --> IDC.Utilities.Data.MongoRepository.GetAllAsync(JObject filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Repository.cs:line 209
   --> IDC.Template.Controllers.DemoController.GetAllDocuments(Dictionary`2 filter, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Controllers/DemoController.Mongod.cs:line 89
Inner Exception:
  Type: System.TimeoutException
  Message: A timeout occurred after 30000ms selecting a server using CompositeServerSelector{ Selectors = ReadPreferenceServerSelector{ ReadPreference = { Mode : Primary } }, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 }, OperationsCountServerSelector }. Client view of cluster state is { ClusterId : "1", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", ReasonChanged: "Heartbeat", State: "Disconnected", ServerVersion: , TopologyVersion: , Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.
 ---> System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at MongoDB.Driver.Core.Connections.SslStreamFactory.CreateStream(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelper(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.Open(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.InitializeConnection(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.Heartbeat(CancellationToken cancellationToken)", LastHeartbeatTimestamp: "2025-03-15T17:17:43.2842196Z", LastUpdateTimestamp: "2025-03-15T17:17:43.2842198Z" }] }.
  StackTrace:
     --> MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 342

[2025-03-16 00:20:06] [Error] Type: System.ArgumentException
Message: Database names must be non-empty and not contain '.' or the null character. (Parameter 'databaseName')
StackTrace:
   --> MongoDB.Driver.Core.Misc.Ensure.That[T](T value, Func`2 assertion, String paramName, String message)
   --> MongoDB.Driver.DatabaseNamespace..ctor(String databaseName)
   --> MongoDB.Driver.MongoClient.GetDatabase(String name, MongoDatabaseSettings settings)
   --> IDC.Utilities.Data.MongoHelper..ctor(CommonConnectionString connectionString, Messages messages, SystemLogging logging) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/CTOR.cs:line 100

[2025-03-16 00:20:06] [Error] Type: System.ArgumentException
Message: Database names must be non-empty and not contain '.' or the null character. (Parameter 'databaseName')
StackTrace:
   --> MongoDB.Driver.Core.Misc.Ensure.That[T](T value, Func`2 assertion, String paramName, String message)
   --> MongoDB.Driver.DatabaseNamespace..ctor(String databaseName)
   --> MongoDB.Driver.MongoClient.GetDatabase(String name, MongoDatabaseSettings settings)
   --> IDC.Utilities.Data.MongoHelper..ctor(CommonConnectionString connectionString, Messages messages, SystemLogging logging) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/CTOR.cs:line 100
   --> Program.<>c.<ConfigureMongoDB>b__14_0(IServiceProvider _) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Program.DI.cs:line 121
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   --> Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   --> Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   --> lambda_method25(Closure, IServiceProvider, Object[])
   --> Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)

[2025-03-16 00:29:03] [Error] Type: System.OperationCanceledException
Message: The operation was canceled.
StackTrace:
   --> System.Threading.CancellationToken.ThrowOperationCanceledException()
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 345

[2025-03-16 00:29:03] [Error] Type: System.TimeoutException
Message: Operation timed out after 3 attempts
StackTrace:
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 371
   --> IDC.Utilities.Data.MongoRepository.GetAllAsync(JObject filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Repository.cs:line 209
   --> IDC.Template.Controllers.DemoController.GetAllDocuments(Dictionary`2 filter, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Controllers/DemoController.Mongod.cs:line 89
Inner Exception:
  Type: System.OperationCanceledException
  Message: The operation was canceled.
  StackTrace:
     --> System.Threading.CancellationToken.ThrowOperationCanceledException()
   --> MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Clusters.IClusterExtensions.SelectServerAndPinIfNeededAsync(ICluster cluster, ICoreSessionHandle session, IServerSelector selector, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Bindings.ReadPreferenceBinding.GetReadChannelSourceAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.InitializeAsync(CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.RetryableReadContext.CreateAsync(IReadBinding binding, Boolean retryRequested, CancellationToken cancellationToken)
   --> MongoDB.Driver.Core.Operations.FindOperation`1.ExecuteAsync(IReadBinding binding, CancellationToken cancellationToken)
   --> MongoDB.Driver.OperationExecutor.ExecuteReadOperationAsync[TResult](IReadBinding binding, IReadOperation`1 operation, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.ExecuteReadOperationAsync[TResult](IClientSessionHandle session, IReadOperation`1 operation, ReadPreference readPreference, CancellationToken cancellationToken)
   --> MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   --> MongoDB.Driver.IAsyncCursorSourceExtensions.ToListAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   --> IDC.Utilities.Data.MongoHelper.ExecuteQueryAsync[T](String collection, FilterDefinition`1 filter, Action`1 callback, CancellationToken cancellationToken) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Data/Mongod/Methods.cs:line 345

[2025-03-16 03:25:32] [Information] GET /swagger/index.html completed in 161.1284ms with status 200
[2025-03-16 03:25:32] [Information] GET /swagger/index.js completed in 14.5482ms with status 200
[2025-03-16 03:25:32] [Information] GET /swagger/Main/swagger.json completed in 103.6931ms with status 200
[2025-03-16 03:25:58] [Information] GET /swagger/Demo/swagger.json completed in 28.649ms with status 200
[2025-03-16 03:26:10] [Error] GET /api/Tester/Add failed
[2025-03-16 03:26:10] [Error] Type: System.InvalidOperationException
Message: Response Content-Length mismatch: too many bytes written (87 of 76).
StackTrace:
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.VerifyAndUpdateWrite(Int32 count)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WritePipeAsync(ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)
   --> System.IO.Compression.DeflateStream.<FlushAsync>g__Core|33_0(CancellationToken cancellationToken)
   --> System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   --> System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   --> Microsoft.AspNetCore.WebUtilities.PagedByteBuffer.MoveToAsync(PipeWriter writer, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.WebUtilities.FileBufferingWriteStream.DrainBufferAsync(PipeWriter destination, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   --> Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location ---
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   --> Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   --> Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   --> Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   --> IDC.Template.Utilities.Middlewares.RateLimitingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RateLimitingMiddleware.cs:line 56
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 47
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 03:27:04] [Error] GET /api/Tester/Add failed
[2025-03-16 03:27:04] [Error] Type: System.InvalidOperationException
Message: Response Content-Length mismatch: too many bytes written (87 of 76).
StackTrace:
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.VerifyAndUpdateWrite(Int32 count)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WritePipeAsync(ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)
   --> System.IO.Compression.DeflateStream.<FlushAsync>g__Core|33_0(CancellationToken cancellationToken)
   --> System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   --> System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   --> Microsoft.AspNetCore.WebUtilities.PagedByteBuffer.MoveToAsync(PipeWriter writer, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.WebUtilities.FileBufferingWriteStream.DrainBufferAsync(PipeWriter destination, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   --> Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location ---
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   --> Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   --> Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   --> Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   --> IDC.Template.Utilities.Middlewares.RateLimitingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RateLimitingMiddleware.cs:line 56
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 47
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 03:28:04] [Information] GET /swagger/index.html completed in 190.0938ms with status 200
[2025-03-16 03:28:04] [Information] GET /swagger/index.js completed in 2.1609ms with status 200
[2025-03-16 03:28:05] [Information] GET /swagger/Main/swagger.json completed in 106.3023ms with status 200
[2025-03-16 03:28:14] [Information] GET /swagger/Demo/swagger.json completed in 34.6451ms with status 200
[2025-03-16 03:28:22] [Error] GET /api/Tester/Add failed
[2025-03-16 03:28:22] [Error] Type: System.InvalidOperationException
Message: Response Content-Length mismatch: too many bytes written (87 of 76).
StackTrace:
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.VerifyAndUpdateWrite(Int32 count)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WritePipeAsync(ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)
   --> System.IO.Compression.DeflateStream.<FlushAsync>g__Core|33_0(CancellationToken cancellationToken)
   --> System.IO.Pipelines.StreamPipeWriter.FlushAsyncInternal(Boolean writeToStream, ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   --> System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   --> Microsoft.AspNetCore.WebUtilities.PagedByteBuffer.MoveToAsync(PipeWriter writer, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.WebUtilities.FileBufferingWriteStream.DrainBufferAsync(PipeWriter destination, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   --> Microsoft.AspNetCore.Mvc.Formatters.NewtonsoftJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location ---
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   --> Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   --> Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   --> Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   --> Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 47
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 03:29:00] [Information] GET /swagger/index.html completed in 156.2478ms with status 200
[2025-03-16 03:29:00] [Information] GET /swagger/index.js completed in 3.1121ms with status 200
[2025-03-16 03:29:00] [Information] GET /swagger/Main/swagger.json completed in 112.5321ms with status 200
[2025-03-16 03:29:16] [Information] GET /api/Tester/Add completed in 52.7079ms with status 200
[2025-03-16 03:34:28] [Error] GET /swagger/index.html failed
[2025-03-16 03:34:28] [Error] Type: System.InvalidOperationException
Message: Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead.
StackTrace:
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   --> System.IO.Compression.DeflateStream.PurgeBuffers(Boolean disposing)
   --> System.IO.Compression.DeflateStream.Dispose(Boolean disposing)
   --> System.IO.Stream.Close()
   --> System.IO.Compression.GZipStream.Dispose(Boolean disposing)
   --> System.IO.Stream.Close()
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 47
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 03:34:38] [Error] GET /swagger/index.html failed
[2025-03-16 03:34:38] [Error] Type: System.InvalidOperationException
Message: Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead.
StackTrace:
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   --> System.IO.Compression.DeflateStream.PurgeBuffers(Boolean disposing)
   --> System.IO.Compression.DeflateStream.Dispose(Boolean disposing)
   --> System.IO.Stream.Close()
   --> System.IO.Compression.GZipStream.Dispose(Boolean disposing)
   --> System.IO.Stream.Close()
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 47
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 03:35:47] [Information] GET /swagger/index.html completed in 213.4441ms with status 200
[2025-03-16 03:35:47] [Information] GET /swagger/index.js completed in 28.6038ms with status 200
[2025-03-16 03:35:47] [Information] GET /swagger/Main/swagger.json completed in 97.9644ms with status 200
[2025-03-16 03:35:59] [Error] GET /api/Tester/Add failed
[2025-03-16 03:35:59] [Error] Type: System.InvalidOperationException
Message: Response Content-Length mismatch: too many bytes written (87 of 76).
StackTrace:
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.VerifyAndUpdateWrite(Int32 count)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WritePipeAsync(ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   --> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(ReadOnlyMemory`1 source, CancellationToken cancellationToken)
   --> System.IO.Compression.DeflateStream.<FlushAsync>g__Core|33_0(CancellationToken cancellationToken)
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 67
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 67
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 88
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 03:37:20] [Information] GET /swagger/index.html completed in 173.0578ms with status 200
[2025-03-16 03:37:20] [Information] GET /swagger/index.js completed in 3.0705ms with status 200
[2025-03-16 03:37:20] [Information] GET /swagger/Main/swagger.json completed in 102.1916ms with status 200
[2025-03-16 03:37:25] [Information] GET /api/Tester/Add completed in 50.433ms with status 200
[2025-03-16 04:45:50] [Information] GET /swagger/index.html completed in 165.945ms with status 200
[2025-03-16 04:45:50] [Information] GET /swagger/index.js completed in 9.9416ms with status 429
[2025-03-16 04:46:43] [Information] GET /swagger/index.html completed in 185.3064ms with status 200
[2025-03-16 04:46:43] [Information] GET /swagger/index.js completed in 11.7435ms with status 429
[2025-03-16 04:47:32] [Information] GET /swagger/index.html completed in 179.0639ms with status 200
[2025-03-16 04:47:32] [Information] GET /swagger/index.js completed in 13.0464ms with status 429
[2025-03-16 04:48:31] [Information] GET /swagger/index.html completed in 183.8055ms with status 200
[2025-03-16 04:48:32] [Information] GET /swagger/index.js completed in 2.301ms with status 200
[2025-03-16 04:48:32] [Information] GET /swagger/Main/swagger.json completed in 109.7969ms with status 200
[2025-03-16 04:48:36] [Information] GET /swagger/Demo/swagger.json completed in 36.9048ms with status 200
[2025-03-16 04:48:44] [Information] GET /api/Tester/Add completed in 50.3427ms with status 200
[2025-03-16 04:48:47] [Information] GET /api/Tester/Add completed in 1.4821ms with status 200
[2025-03-16 04:48:47] [Information] GET /api/Tester/Add completed in 0.9953ms with status 200
[2025-03-16 04:48:47] [Information] GET /api/Tester/Add completed in 0.3999ms with status 200
[2025-03-16 04:48:48] [Information] GET /api/Tester/Add completed in 0.5655ms with status 200
[2025-03-16 04:48:49] [Information] GET /api/Tester/Add completed in 0.4152ms with status 200
[2025-03-16 04:48:49] [Information] GET /api/Tester/Add completed in 0.4725ms with status 200
[2025-03-16 04:48:50] [Information] GET /api/Tester/Add completed in 0.6469ms with status 200
[2025-03-16 04:48:50] [Information] GET /api/Tester/Add completed in 0.3783ms with status 200
[2025-03-16 04:48:50] [Information] GET /api/Tester/Add completed in 0.5331ms with status 200
[2025-03-16 04:48:50] [Information] GET /api/Tester/Add completed in 0.3792ms with status 200
[2025-03-16 04:48:50] [Information] GET /api/Tester/Add completed in 0.4118ms with status 200
[2025-03-16 04:48:51] [Information] GET /api/Tester/Add completed in 0.6208ms with status 200
[2025-03-16 04:48:51] [Information] GET /api/Tester/Add completed in 0.4913ms with status 200
[2025-03-16 04:48:51] [Information] GET /api/Tester/Add completed in 0.3653ms with status 200
[2025-03-16 04:48:51] [Information] GET /api/Tester/Add completed in 0.583ms with status 200
[2025-03-16 04:48:51] [Information] GET /api/Tester/Add completed in 0.5017ms with status 200
[2025-03-16 04:48:51] [Information] GET /api/Tester/Add completed in 0.3172ms with status 200
[2025-03-16 04:48:51] [Information] GET /api/Tester/Add completed in 0.398ms with status 200
[2025-03-16 04:48:52] [Information] GET /api/Tester/Add completed in 0.3728ms with status 200
[2025-03-16 04:48:52] [Information] GET /api/Tester/Add completed in 0.3863ms with status 200
[2025-03-16 04:48:52] [Information] GET /api/Tester/Add completed in 0.3831ms with status 200
[2025-03-16 04:48:52] [Information] GET /api/Tester/Add completed in 0.3659ms with status 200
[2025-03-16 04:48:52] [Information] GET /api/Tester/Add completed in 0.3158ms with status 200
[2025-03-16 04:48:52] [Information] GET /api/Tester/Add completed in 0.6009ms with status 200
[2025-03-16 04:48:53] [Information] GET /api/Tester/Add completed in 0.4342ms with status 200
[2025-03-16 04:48:53] [Information] GET /api/Tester/Add completed in 0.3447ms with status 200
[2025-03-16 04:48:53] [Information] GET /api/Tester/Add completed in 0.3315ms with status 200
[2025-03-16 04:48:53] [Information] GET /api/Tester/Add completed in 0.3047ms with status 200
[2025-03-16 04:48:53] [Information] GET /api/Tester/Add completed in 0.3669ms with status 200
[2025-03-16 04:48:53] [Information] GET /api/Tester/Add completed in 0.4952ms with status 200
[2025-03-16 04:48:53] [Information] GET /api/Tester/Add completed in 0.4375ms with status 200
[2025-03-16 04:48:54] [Information] GET /api/Tester/Add completed in 0.2822ms with status 200
[2025-03-16 04:48:54] [Information] GET /api/Tester/Add completed in 0.2026ms with status 200
[2025-03-16 04:48:54] [Information] GET /api/Tester/Add completed in 0.2209ms with status 200
[2025-03-16 04:48:54] [Information] GET /api/Tester/Add completed in 0.2325ms with status 200
[2025-03-16 04:48:54] [Information] GET /api/Tester/Add completed in 0.2309ms with status 200
[2025-03-16 04:48:54] [Information] GET /api/Tester/Add completed in 0.209ms with status 200
[2025-03-16 04:48:54] [Information] GET /api/Tester/Add completed in 0.232ms with status 200
[2025-03-16 04:48:55] [Information] GET /api/Tester/Add completed in 0.1963ms with status 200
[2025-03-16 04:48:55] [Information] GET /api/Tester/Add completed in 0.1955ms with status 200
[2025-03-16 04:48:55] [Information] GET /api/Tester/Add completed in 0.2315ms with status 200
[2025-03-16 04:48:55] [Information] GET /api/Tester/Add completed in 0.2782ms with status 200
[2025-03-16 04:48:56] [Information] GET /api/Tester/Add completed in 0.3301ms with status 200
[2025-03-16 04:48:56] [Information] GET /api/Tester/Add completed in 0.2095ms with status 200
[2025-03-16 04:48:56] [Information] GET /api/Tester/Add completed in 0.1988ms with status 200
[2025-03-16 04:48:56] [Information] GET /api/Tester/Add completed in 0.207ms with status 200
[2025-03-16 04:49:01] [Information] GET /api/Tester/Add completed in 0.2571ms with status 200
[2025-03-16 22:15:44] [Information] GET /swagger/index.html completed in 163.2777ms with status 200
[2025-03-16 22:15:44] [Information] GET /swagger/index.js completed in 34.6511ms with status 200
[2025-03-16 22:15:44] [Information] GET /css/swagger-custom.css completed in 42.7577ms with status 304
s 304
[2025-03-16 22:15:44] [Information] GET /swagger/swagger-ui-bundle.js completed in 103.4339ms with status 200
[2025-03-16 22:15:44] [Information] GET /images/idx-logo-white.png completed in 2.5513ms with status 304
[2025-03-16 22:15:44] [Information] GET /swagger/Main/swagger.json completed in 106.5966ms with status 200
[2025-03-16 22:15:47] [Information] GET /swagger/Demo/swagger.json completed in 38.8686ms with status 200
[2025-03-16 22:15:54] [Information] GET /api/Tester/Add completed in 53.7413ms with status 200
[2025-03-16 22:16:57] [Information] GET /api/Demo/Log/Files completed in 108.3519ms with status 200
[2025-03-16 22:16:57] [Error] The SQLiteHelper has already been disposed.
[2025-03-16 22:26:53] [Information] GET /swagger/index.html completed in 177.0731ms with status 200
[2025-03-16 22:26:53] [Information] GET /swagger/index.js completed in 13.8817ms with status 200
[2025-03-16 22:26:53] [Information] GET /swagger/Main/swagger.json completed in 115.4007ms with status 200
[2025-03-16 22:26:57] [Information] GET /swagger/Demo/swagger.json completed in 35.6787ms with status 200
[2025-03-16 22:27:04] [Information] GET /api/Tester/Add completed in 54.1711ms with status 200
[2025-03-16 22:40:43] [Information] GET /swagger/index.html completed in 181.123ms with status 200
[2025-03-16 22:40:43] [Information] GET /swagger/index.js completed in 15.9301ms with status 200
[2025-03-16 22:40:44] [Information] GET /swagger/Main/swagger.json completed in 136.3922ms with status 200
[2025-03-16 22:40:48] [Information] GET /swagger/Demo/swagger.json completed in 43.332ms with status 200
[2025-03-16 22:42:19] [Information] POST /api/Demo/ApiKey/client completed in 136.8908ms with status 200
[2025-03-16 22:42:19] [Error] The SQLiteHelper has already been disposed.
[2025-03-16 22:42:26] [Information] POST /api/Demo/ApiKey/client completed in 2.348ms with status 200
[2025-03-16 22:42:26] [Error] The SQLiteHelper has already been disposed.
[2025-03-16 22:42:27] [Information] POST /api/Demo/ApiKey/client completed in 1.4995ms with status 200
[2025-03-16 22:42:27] [Error] The SQLiteHelper has already been disposed.
[2025-03-16 22:42:27] [Information] POST /api/Demo/ApiKey/client completed in 1.0493ms with status 200
[2025-03-16 22:42:27] [Error] The SQLiteHelper has already been disposed.
[2025-03-16 22:42:28] [Information] POST /api/Demo/ApiKey/client completed in 1.2037ms with status 200
[2025-03-16 22:42:28] [Error] The SQLiteHelper has already been disposed.
[2025-03-16 23:16:42] [Error] GET /swagger/index.html failed
[2025-03-16 23:16:43] [Error] Type: System.Collections.Generic.KeyNotFoundException
Message: JSON property not found: en.api.message.api_key_missing
StackTrace:
   --> IDC.Utilities.Extensions.JObjectExtensions.PropGet[T](JObject source, String path, String onNullMessage, Boolean throwOnNull) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Extensions/JObjectExtensions.cs:line 97
   --> IDC.Utilities.Language.GetMessage(String path, String language) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Language.cs:line 176
   --> IDC.Utilities.Models.API.APIResponse.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponse.cs:line 112
   --> IDC.Utilities.Models.API.APIResponseData`1.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponseData.cs:line 88
   --> IDC.Template.Utilities.Middlewares.ApiKeyAuthenticationMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ApiKeyAuthenticationMiddleware.cs:line 55
   --> IDC.Template.Utilities.Middlewares.SecurityHeadersMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/SecurityHeadersMiddleware.cs:line 57
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 51
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 104
   --> IDC.Template.Utilities.Middlewares.RateLimitingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RateLimitingMiddleware.cs:line 59
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 23:16:43] [Error] GET /favicon.ico failed
[2025-03-16 23:16:43] [Error] Type: System.Collections.Generic.KeyNotFoundException
Message: JSON property not found: en.api.message.api_key_missing
StackTrace:
   --> IDC.Utilities.Extensions.JObjectExtensions.PropGet[T](JObject source, String path, String onNullMessage, Boolean throwOnNull) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Extensions/JObjectExtensions.cs:line 97
   --> IDC.Utilities.Language.GetMessage(String path, String language) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Language.cs:line 176
   --> IDC.Utilities.Models.API.APIResponse.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponse.cs:line 112
   --> IDC.Utilities.Models.API.APIResponseData`1.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponseData.cs:line 88
   --> IDC.Template.Utilities.Middlewares.ApiKeyAuthenticationMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ApiKeyAuthenticationMiddleware.cs:line 55
   --> IDC.Template.Utilities.Middlewares.SecurityHeadersMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/SecurityHeadersMiddleware.cs:line 57
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 51
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 104
   --> IDC.Template.Utilities.Middlewares.RateLimitingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RateLimitingMiddleware.cs:line 59
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 23:17:33] [Information] GET /swagger/index.html completed in 206.0957ms with status 200
[2025-03-16 23:17:33] [Information] GET /swagger/index.js completed in 21.2114ms with status 200
[2025-03-16 23:17:33] [Information] GET /swagger/Main/swagger.json completed in 122.4527ms with status 200
[2025-03-16 23:17:46] [Information] GET /swagger/Demo/swagger.json completed in 43.0117ms with status 200
[2025-03-16 23:18:45] [Information] POST /api/Demo/ApiKey/environment completed in 123.5749ms with status 200
[2025-03-16 23:18:45] [Error] The SQLiteHelper has already been disposed.
[2025-03-16 23:19:57] [Error] GET /swagger/index.html failed
[2025-03-16 23:19:57] [Error] Type: System.Collections.Generic.KeyNotFoundException
Message: JSON property not found: en.api.message.api_key_missing
StackTrace:
   --> IDC.Utilities.Extensions.JObjectExtensions.PropGet[T](JObject source, String path, String onNullMessage, Boolean throwOnNull) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Extensions/JObjectExtensions.cs:line 97
   --> IDC.Utilities.Language.GetMessage(String path, String language) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Language.cs:line 176
   --> IDC.Utilities.Models.API.APIResponse.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponse.cs:line 112
   --> IDC.Utilities.Models.API.APIResponseData`1.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponseData.cs:line 88
   --> IDC.Template.Utilities.Middlewares.ApiKeyAuthenticationMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ApiKeyAuthenticationMiddleware.cs:line 55
   --> IDC.Template.Utilities.Middlewares.SecurityHeadersMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/SecurityHeadersMiddleware.cs:line 57
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 51
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 104
   --> IDC.Template.Utilities.Middlewares.RateLimitingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RateLimitingMiddleware.cs:line 59
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 23:19:57] [Error] GET /favicon.ico failed
[2025-03-16 23:19:57] [Error] Type: System.Collections.Generic.KeyNotFoundException
Message: JSON property not found: en.api.message.api_key_missing
StackTrace:
   --> IDC.Utilities.Extensions.JObjectExtensions.PropGet[T](JObject source, String path, String onNullMessage, Boolean throwOnNull) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Extensions/JObjectExtensions.cs:line 97
   --> IDC.Utilities.Language.GetMessage(String path, String language) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Language.cs:line 176
   --> IDC.Utilities.Models.API.APIResponse.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponse.cs:line 112
   --> IDC.Utilities.Models.API.APIResponseData`1.ChangeMessage(Language language, String key) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Utilities/Models/API/APIResponseData.cs:line 88
   --> IDC.Template.Utilities.Middlewares.ApiKeyAuthenticationMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ApiKeyAuthenticationMiddleware.cs:line 55
   --> IDC.Template.Utilities.Middlewares.SecurityHeadersMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/SecurityHeadersMiddleware.cs:line 57
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 51
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 104
   --> IDC.Template.Utilities.Middlewares.RateLimitingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RateLimitingMiddleware.cs:line 59
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 23:23:42] [Information] GET /swagger/index.html completed in 53.0618ms with status 401
[2025-03-16 23:23:42] [Information] GET /favicon.ico completed in 0.8024ms with status 401
[2025-03-16 23:25:10] [Information] GET /swagger/index.html completed in 39.9985ms with status 401
[2025-03-16 23:25:10] [Information] GET /favicon.ico completed in 1.0786ms with status 401
[2025-03-16 23:25:49] [Information] GET /swagger/index.html completed in 33.7662ms with status 401
[2025-03-16 23:25:49] [Information] GET /favicon.ico completed in 0.9851ms with status 401
[2025-03-16 23:26:42] [Information] GET /swagger/index.html completed in 33.8207ms with status 401
[2025-03-16 23:26:42] [Information] GET /favicon.ico completed in 2.1403ms with status 401
[2025-03-16 23:27:29] [Information] GET /swagger/index.html completed in 40.2907ms with status 401
[2025-03-16 23:27:29] [Information] GET /favicon.ico completed in 1.3209ms with status 401
[2025-03-16 23:28:17] [Information] GET /swagger/index.html completed in 45.8479ms with status 401
[2025-03-16 23:28:17] [Information] GET /favicon.ico completed in 1.094ms with status 401
[2025-03-16 23:28:47] [Information] GET /swagger/index.html completed in 195.5171ms with status 200
[2025-03-16 23:28:47] [Information] GET /swagger/index.js completed in 12.9123ms with status 200
[2025-03-16 23:28:48] [Information] GET /swagger/Main/swagger.json completed in 107.1968ms with status 200
[2025-03-16 23:29:20] [Information] GET /swagger/Demo/swagger.json completed in 32.1299ms with status 200
[2025-03-16 23:34:07] [Information] GET /swagger/index.html completed in 200.0974ms with status 200
[2025-03-16 23:34:07] [Information] GET /swagger/index.js completed in 83.1294ms with status 200
[2025-03-16 23:34:07] [Information] GET /swagger/Main/swagger.json completed in 159.1172ms with status 200
[2025-03-16 23:34:49] [Information] GET /api/Tester/Add completed in 19.2478ms with status 401
[2025-03-16 23:35:03] [Information] GET /api/Tester/Add completed in 0.3691ms with status 401
[2025-03-16 23:35:41] [Information] GET /api/Tester/Add completed in 26.3201ms with status 401
[2025-03-16 23:35:45] [Information] GET /api/Tester/Add completed in 14.9075ms with status 401
[2025-03-16 23:37:23] [Information] GET /swagger/index.html completed in 215.5087ms with status 200
[2025-03-16 23:37:23] [Information] GET /swagger/index.js completed in 10.7908ms with status 200
[2025-03-16 23:37:23] [Information] GET /swagger/Main/swagger.json completed in 110.6769ms with status 200
[2025-03-16 23:37:30] [Information] GET /api/Tester/Add completed in 11.0117ms with status 401
[2025-03-16 23:38:53] [Information] GET /swagger/index.html completed in 188.3409ms with status 200
[2025-03-16 23:38:53] [Information] GET /swagger/index.js completed in 8.161ms with status 200
[2025-03-16 23:38:53] [Information] GET /swagger/Main/swagger.json completed in 103.4764ms with status 200
[2025-03-16 23:39:05] [Information] GET /api/Tester/Add completed in 34.7786ms with status 401
[2025-03-16 23:42:59] [Information] GET /swagger/index.html completed in 177.046ms with status 200
[2025-03-16 23:42:59] [Information] GET /swagger/index.js completed in 39.3848ms with status 200
[2025-03-16 23:43:00] [Information] GET /swagger/Main/swagger.json completed in 115.4545ms with status 200
[2025-03-16 23:43:20] [Information] GET /api/Tester/Add completed in 33.8808ms with status 401
[2025-03-16 23:44:37] [Information] GET /swagger/index.html completed in 246.2429ms with status 200
[2025-03-16 23:44:37] [Information] GET /swagger/index.js completed in 13.66ms with status 200
[2025-03-16 23:44:37] [Information] GET /swagger/Main/swagger.json completed in 108.1485ms with status 200
[2025-03-16 23:44:55] [Information] GET /api/Tester/Add completed in 34.792ms with status 401
[2025-03-16 23:47:04] [Information] GET /swagger/index.html completed in 196.1977ms with status 200
[2025-03-16 23:47:04] [Information] GET /swagger/index.js completed in 5.8091ms with status 200
[2025-03-16 23:47:05] [Information] GET /swagger/Main/swagger.json completed in 124.0356ms with status 200
[2025-03-16 23:48:52] [Information] GET /swagger/index.html completed in 185.2256ms with status 200
[2025-03-16 23:48:52] [Information] GET /swagger/index.js completed in 2.0171ms with status 200
[2025-03-16 23:48:53] [Information] GET /swagger/Main/swagger.json completed in 120.952ms with status 200
[2025-03-16 23:49:12] [Error] GET /api/Tester/Add failed
[2025-03-16 23:49:12] [Error] Type: System.InvalidOperationException
Message: No service for type 'IDC.Template.Utilities.Middlewares.ApiKeyAuthenticationMiddleware' has been registered.
StackTrace:
   --> Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   --> Microsoft.AspNetCore.Http.MiddlewareFactory.Create(Type middlewareType)
   --> Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.InterfaceMiddlewareBinder.<>c__DisplayClass2_0.<<CreateMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   --> IDC.Template.Utilities.Middlewares.SecurityHeadersMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/SecurityHeadersMiddleware.cs:line 57
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 51
   --> IDC.Template.Utilities.Middlewares.ResponseCompressionMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/ResponseCompressionMiddleware.cs:line 104
   --> IDC.Template.Utilities.Middlewares.RateLimitingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RateLimitingMiddleware.cs:line 59
   --> IDC.Template.Utilities.Middlewares.RequestLoggingMiddleware.InvokeAsync(HttpContext context) in /media/fadhly/Data/GitHub/template_plus_utilities/IDC.Template/Utilities/Middlewares/RequestLoggingMiddleware.cs:line 48

[2025-03-16 23:50:38] [Information] GET /swagger/index.html completed in 171.7654ms with status 200
[2025-03-16 23:50:38] [Information] GET /swagger/index.js completed in 21.0541ms with status 200
[2025-03-16 23:50:38] [Information] GET /swagger/Main/swagger.json completed in 130.6179ms with status 200
[2025-03-16 23:51:09] [Information] GET /api/Tester/Add completed in 37.3214ms with status 500
[2025-03-16 23:52:21] [Information] GET /swagger/index.html completed in 239.1098ms with status 200
[2025-03-16 23:52:21] [Information] GET /swagger/index.js completed in 7.932ms with status 200
[2025-03-16 23:52:21] [Information] GET /swagger/Main/swagger.json completed in 116.0013ms with status 200
[2025-03-16 23:52:41] [Information] GET /api/Tester/Add completed in 39.9922ms with status 500
[2025-03-16 23:53:55] [Information] GET /swagger/index.html completed in 173.6715ms with status 200
[2025-03-16 23:53:55] [Information] GET /swagger/index.js completed in 19.4011ms with status 200
[2025-03-16 23:53:55] [Information] GET /swagger/Main/swagger.json completed in 128.2711ms with status 200
[2025-03-16 23:54:09] [Information] GET /api/Tester/Add completed in 73.7552ms with status 500
[2025-03-16 23:54:34] [Information] GET /api/Tester/Add completed in 12.741ms with status 500
